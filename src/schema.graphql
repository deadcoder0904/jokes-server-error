### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Author {
  id: ID!
  jokes(after: String, before: String, first: Int, last: Int, skip: Int): [Joke!]
  name: String!
}

input AuthorCreateOneWithoutAuthorInput {
  connect: AuthorWhereUniqueInput
  create: AuthorCreateWithoutJokesInput
}

input AuthorCreateWithoutJokesInput {
  id: ID
  name: String!
}

input AuthorWhereUniqueInput {
  id: ID
}

type Joke {
  author: Author!
  content: String!
  id: ID!
}

input JokeCreateInput {
  author: AuthorCreateOneWithoutAuthorInput!
  content: String!
  id: ID
}

input JokeWhereUniqueInput {
  content: String
  id: ID
}

type Mutation {
  createJoke(data: JokeCreateInput!): Joke!
  deleteJoke(where: JokeWhereUniqueInput!): Joke
}

type Query {
  filterJokesByAuthor(name: String): [Joke!]!
  jokes(after: String, before: String, first: Int, last: Int, skip: Int): [Joke!]
}
